# module.network-vpc.aws_route_table.rt_porteiro:
resource "aws_route_table" "rt_porteiro" {
    arn              = "arn:aws:ec2:us-east-1:206322024537:route-table/rtb-002ac27bc13a9e7d8"
    id               = "rtb-002ac27bc13a9e7d8"
    owner_id         = "206322024537"
    propagating_vgws = []
    route            = []
    tags             = {
        "Name" = "tf-route-table-porteiro"
    }
    tags_all         = {
        "Name" = "tf-route-table-porteiro"
    }
    vpc_id           = "vpc-0fe8a1b71fabacfdd"
}

# module.network-vpc.aws_route_table_association.tf-private-rta-assoc:
resource "aws_route_table_association" "tf-private-rta-assoc" {
    id             = "rtbassoc-06c861f21148c0c6b"
    route_table_id = "rtb-002ac27bc13a9e7d8"
    subnet_id      = "subnet-00602f4ab2b9f9847"
}

# module.network-vpc.aws_subnet.private-subnet-ssm:
resource "aws_subnet" "private-subnet-ssm" {
    arn                                            = "arn:aws:ec2:us-east-1:206322024537:subnet/subnet-00602f4ab2b9f9847"
    assign_ipv6_address_on_creation                = false
    availability_zone                              = "us-east-1a"
    availability_zone_id                           = "use1-az6"
    cidr_block                                     = "172.35.0.0/20"
    enable_dns64                                   = false
    enable_lni_at_device_index                     = 0
    enable_resource_name_dns_a_record_on_launch    = false
    enable_resource_name_dns_aaaa_record_on_launch = false
    id                                             = "subnet-00602f4ab2b9f9847"
    ipv6_native                                    = false
    map_customer_owned_ip_on_launch                = false
    map_public_ip_on_launch                        = false
    owner_id                                       = "206322024537"
    private_dns_hostname_type_on_launch            = "ip-name"
    tags                                           = {
        "Name" = "tf-private-subnet-bastion-ssm"
    }
    tags_all                                       = {
        "Name" = "tf-private-subnet-bastion-ssm"
    }
    vpc_id                                         = "vpc-0fe8a1b71fabacfdd"
}

# module.network-vpc.aws_vpc.vpc_ssm:
resource "aws_vpc" "vpc_ssm" {
    arn                                  = "arn:aws:ec2:us-east-1:206322024537:vpc/vpc-0fe8a1b71fabacfdd"
    assign_generated_ipv6_cidr_block     = false
    cidr_block                           = "172.35.0.0/16"
    default_network_acl_id               = "acl-014af5fdf25f22f27"
    default_route_table_id               = "rtb-0bfde4dcd231a31ff"
    default_security_group_id            = "sg-01486f524b291ce9e"
    dhcp_options_id                      = "dopt-097eba7a543d2dec7"
    enable_dns_hostnames                 = true
    enable_dns_support                   = true
    enable_network_address_usage_metrics = false
    id                                   = "vpc-0fe8a1b71fabacfdd"
    instance_tenancy                     = "default"
    ipv6_netmask_length                  = 0
    main_route_table_id                  = "rtb-0bfde4dcd231a31ff"
    owner_id                             = "206322024537"
    tags                                 = {
        "Name" = "vpc-ssm-tf"
    }
    tags_all                             = {
        "Name" = "vpc-ssm-tf"
    }
}

# module.network-vpc.aws_vpc_endpoint.ec2messages:
resource "aws_vpc_endpoint" "ec2messages" {
    arn                   = "arn:aws:ec2:us-east-1:206322024537:vpc-endpoint/vpce-001be9d68d9ff54e1"
    cidr_blocks           = []
    dns_entry             = []
    id                    = "vpce-001be9d68d9ff54e1"
    ip_address_type       = "ipv4"
    network_interface_ids = []
    owner_id              = "206322024537"
    policy                = jsonencode(
        {
            Statement = [
                {
                    Action    = "*"
                    Effect    = "Allow"
                    Principal = "*"
                    Resource  = "*"
                },
            ]
        }
    )
    private_dns_enabled   = false
    requester_managed     = false
    route_table_ids       = []
    security_group_ids    = [
        "sg-0be35d5eea1a90976",
    ]
    service_name          = "com.amazonaws.us-east-1.ec2messages"
    state                 = "available"
    subnet_ids            = []
    tags                  = {
        "Name" = "vpc-endpoint-ssm-ec2messages"
    }
    tags_all              = {
        "Name" = "vpc-endpoint-ssm-ec2messages"
    }
    vpc_endpoint_type     = "Interface"
    vpc_id                = "vpc-0fe8a1b71fabacfdd"

    dns_options {
        dns_record_ip_type                             = "ipv4"
        private_dns_only_for_inbound_resolver_endpoint = false
    }
}

# module.network-vpc.aws_vpc_endpoint.endpoint_ssm:
resource "aws_vpc_endpoint" "endpoint_ssm" {
    arn                   = "arn:aws:ec2:us-east-1:206322024537:vpc-endpoint/vpce-06d2d3bb5c02af78c"
    cidr_blocks           = []
    dns_entry             = []
    id                    = "vpce-06d2d3bb5c02af78c"
    ip_address_type       = "ipv4"
    network_interface_ids = []
    owner_id              = "206322024537"
    policy                = jsonencode(
        {
            Statement = [
                {
                    Action    = "*"
                    Effect    = "Allow"
                    Principal = "*"
                    Resource  = "*"
                },
            ]
        }
    )
    private_dns_enabled   = false
    requester_managed     = false
    route_table_ids       = []
    security_group_ids    = [
        "sg-0be35d5eea1a90976",
    ]
    service_name          = "com.amazonaws.us-east-1.ssm"
    state                 = "available"
    subnet_ids            = []
    tags                  = {
        "Name" = "vpc-endpoint-ssm"
    }
    tags_all              = {
        "Name" = "vpc-endpoint-ssm"
    }
    vpc_endpoint_type     = "Interface"
    vpc_id                = "vpc-0fe8a1b71fabacfdd"

    dns_options {
        dns_record_ip_type                             = "ipv4"
        private_dns_only_for_inbound_resolver_endpoint = false
    }
}

# module.network-vpc.aws_vpc_endpoint.ssmmessages:
resource "aws_vpc_endpoint" "ssmmessages" {
    arn                   = "arn:aws:ec2:us-east-1:206322024537:vpc-endpoint/vpce-0def97a25bbbfa6c1"
    cidr_blocks           = []
    dns_entry             = []
    id                    = "vpce-0def97a25bbbfa6c1"
    ip_address_type       = "ipv4"
    network_interface_ids = []
    owner_id              = "206322024537"
    policy                = jsonencode(
        {
            Statement = [
                {
                    Action    = "*"
                    Effect    = "Allow"
                    Principal = "*"
                    Resource  = "*"
                },
            ]
        }
    )
    private_dns_enabled   = false
    requester_managed     = false
    route_table_ids       = []
    security_group_ids    = [
        "sg-0be35d5eea1a90976",
    ]
    service_name          = "com.amazonaws.us-east-1.ssmmessages"
    state                 = "available"
    subnet_ids            = []
    tags                  = {
        "Name" = "vpc-endpoint-ssm-ssmmessages"
    }
    tags_all              = {
        "Name" = "vpc-endpoint-ssm-ssmmessages"
    }
    vpc_endpoint_type     = "Interface"
    vpc_id                = "vpc-0fe8a1b71fabacfdd"

    dns_options {
        dns_record_ip_type                             = "ipv4"
        private_dns_only_for_inbound_resolver_endpoint = false
    }
}
# module.security_resources.aws_security_group.access_bastion_sg:
resource "aws_security_group" "access_bastion_sg" {
    arn                    = "arn:aws:ec2:us-east-1:206322024537:security-group/sg-001dbfb00382f9e54"
    description            = "TF - Acesso do porteiro"
    egress                 = [
        {
            cidr_blocks      = [
                "0.0.0.0/0",
            ]
            from_port        = 0
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "-1"
            security_groups  = []
            self             = false
            to_port          = 0
        },
        {
            cidr_blocks      = []
            description      = ""
            from_port        = 443
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "tcp"
            security_groups  = [
                "sg-0be35d5eea1a90976",
            ]
            self             = false
            to_port          = 443
        },
    ]
    id                     = "sg-001dbfb00382f9e54"
    ingress                = []
    name                   = "acesso-porteiro-ssm-tf"
    owner_id               = "206322024537"
    revoke_rules_on_delete = false
    tags                   = {}
    tags_all               = {}
    vpc_id                 = "vpc-0fe8a1b71fabacfdd"
}

# module.security_resources.aws_security_group.endpoint_sg:
resource "aws_security_group" "endpoint_sg" {
    arn                    = "arn:aws:ec2:us-east-1:206322024537:security-group/sg-0be35d5eea1a90976"
    description            = "TF - Acesso do vpc endpoint para o ssm"
    egress                 = [
        {
            cidr_blocks      = [
                "0.0.0.0/0",
            ]
            description      = ""
            from_port        = 0
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "-1"
            security_groups  = []
            self             = false
            to_port          = 0
        },
    ]
    id                     = "sg-0be35d5eea1a90976"
    ingress                = [
        {
            cidr_blocks      = [
                "172.35.0.0/20",
            ]
            description      = "Liberado para range da subnet do porteiro"
            from_port        = 443
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "tcp"
            security_groups  = []
            self             = false
            to_port          = 443
        },
    ]
    name                   = "ssm-vpc-endpoint-tf"
    owner_id               = "206322024537"
    revoke_rules_on_delete = false
    tags                   = {}
    tags_all               = {}
    vpc_id                 = "vpc-0fe8a1b71fabacfdd"
}
